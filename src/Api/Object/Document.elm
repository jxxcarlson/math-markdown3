-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Api.Object.Document exposing (TagsOptionalArguments, authorIdentifier, content, id, identifier, public, tags, timeCreated, timeUpdated, title)

import Api.InputObject
import Api.Interface
import Api.Object
import Api.Scalar
import Api.ScalarCodecs
import Api.Union
import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode


authorIdentifier : SelectionSet String Api.Object.Document
authorIdentifier =
    Object.selectionForField "String" "authorIdentifier" [] Decode.string


content : SelectionSet String Api.Object.Document
content =
    Object.selectionForField "String" "content" [] Decode.string


id : SelectionSet Int Api.Object.Document
id =
    Object.selectionForField "Int" "id" [] Decode.int


identifier : SelectionSet String Api.Object.Document
identifier =
    Object.selectionForField "String" "identifier" [] Decode.string


public : SelectionSet Bool Api.Object.Document
public =
    Object.selectionForField "Bool" "public" [] Decode.bool


type alias TagsOptionalArguments =
    { path : OptionalArgument String }


{-|

  - path - JSON select path

-}
tags : (TagsOptionalArguments -> TagsOptionalArguments) -> SelectionSet Api.ScalarCodecs.Jsonb Api.Object.Document
tags fillInOptionals =
    let
        filledInOptionals =
            fillInOptionals { path = Absent }

        optionalArgs =
            [ Argument.optional "path" filledInOptionals.path Encode.string ]
                |> List.filterMap identity
    in
    Object.selectionForField "ScalarCodecs.Jsonb" "tags" optionalArgs (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapCodecs |> .codecJsonb |> .decoder)


timeCreated : SelectionSet Int Api.Object.Document
timeCreated =
    Object.selectionForField "Int" "timeCreated" [] Decode.int


timeUpdated : SelectionSet Int Api.Object.Document
timeUpdated =
    Object.selectionForField "Int" "timeUpdated" [] Decode.int


title : SelectionSet String Api.Object.Document
title =
    Object.selectionForField "String" "title" [] Decode.string
