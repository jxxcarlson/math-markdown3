-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Api.Mutation exposing (CreateDocumentRequiredArguments, DeleteDocumentRequiredArguments, UpdateDocumentRequiredArguments, createDocument, deleteDocument, updateDocument)

import Api.InputObject
import Api.Interface
import Api.Object
import Api.Scalar
import Api.ScalarCodecs
import Api.Union
import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode exposing (Decoder)


type alias CreateDocumentRequiredArguments =
    { data : Api.InputObject.DocumentInput }


{-| Create a new document in the collection of 'Document'

  - data - 'Document' input values

-}
createDocument : CreateDocumentRequiredArguments -> SelectionSet decodesTo Api.Object.Document -> SelectionSet decodesTo RootMutation
createDocument requiredArgs object_ =
    Object.selectionForCompositeField "createDocument" [ Argument.required "data" requiredArgs.data Api.InputObject.encodeDocumentInput ] object_ identity


type alias UpdateDocumentRequiredArguments =
    { id : Api.ScalarCodecs.Id
    , data : Api.InputObject.DocumentInput
    }


{-| Update an existing document in the collection of 'Document'

  - id - The 'Document' document's ID
  - data - 'Document' input values

-}
updateDocument : UpdateDocumentRequiredArguments -> SelectionSet decodesTo Api.Object.Document -> SelectionSet (Maybe decodesTo) RootMutation
updateDocument requiredArgs object_ =
    Object.selectionForCompositeField "updateDocument" [ Argument.required "id" requiredArgs.id (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId), Argument.required "data" requiredArgs.data Api.InputObject.encodeDocumentInput ] object_ (identity >> Decode.nullable)


type alias DeleteDocumentRequiredArguments =
    { id : Api.ScalarCodecs.Id }


{-| Delete an existing document in the collection of 'Document'

  - id - The 'Document' document's ID

-}
deleteDocument : DeleteDocumentRequiredArguments -> SelectionSet decodesTo Api.Object.Document -> SelectionSet (Maybe decodesTo) RootMutation
deleteDocument requiredArgs object_ =
    Object.selectionForCompositeField "deleteDocument" [ Argument.required "id" requiredArgs.id (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) ] object_ (identity >> Decode.nullable)
